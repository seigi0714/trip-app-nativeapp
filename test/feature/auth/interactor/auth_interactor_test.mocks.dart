// Mocks generated by Mockito 5.4.1 from annotations
// in trip_app_nativeapp/test/feature/auth/interactor/auth_interactor_test.dart.
// Do not manually edit this file.

// @dart=2.19

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:trip_app_nativeapp/features/auth/domain/entity/google_account/google_account.dart'
    as _i3;
import 'package:trip_app_nativeapp/features/auth/domain/entity/oidc/oidc_info.dart'
    as _i2;
import 'package:trip_app_nativeapp/features/auth/domain/entity/third_party_credential/third_party_credential.dart'
    as _i6;
import 'package:trip_app_nativeapp/features/auth/domain/repositories/firebase_auth_interface.dart'
    as _i4;
import 'package:trip_app_nativeapp/features/auth/domain/repositories/google_login_interface.dart'
    as _i8;
import 'package:trip_app_nativeapp/features/auth/domain/repositories/line_login_interface.dart'
    as _i7;
import 'package:trip_app_nativeapp/features/auth/domain/repositories/trip_app_auth_interface.dart'
    as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeOidcInfo_0 extends _i1.SmartFake implements _i2.OidcInfo {
  _FakeOidcInfo_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGoogleAccount_1 extends _i1.SmartFake implements _i3.GoogleAccount {
  _FakeGoogleAccount_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FirebaseAuthInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseAuthInterface extends _i1.Mock
    implements _i4.FirebaseAuthInterface {
  MockFirebaseAuthInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<void> signInWithCustomToken({required String? customToken}) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithCustomToken,
          [],
          {#customToken: customToken},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> signInWithGoogle(_i6.ThirdPartyCredential? credential) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithGoogle,
          [credential],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [LineLoginInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockLineLoginInterface extends _i1.Mock
    implements _i7.LineLoginInterface {
  MockLineLoginInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.OidcInfo> login() => (super.noSuchMethod(
        Invocation.method(
          #login,
          [],
        ),
        returnValue: _i5.Future<_i2.OidcInfo>.value(_FakeOidcInfo_0(
          this,
          Invocation.method(
            #login,
            [],
          ),
        )),
      ) as _i5.Future<_i2.OidcInfo>);
}

/// A class which mocks [GoogleLoginInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoogleLoginInterface extends _i1.Mock
    implements _i8.GoogleLoginInterface {
  MockGoogleLoginInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i3.GoogleAccount> login() => (super.noSuchMethod(
        Invocation.method(
          #login,
          [],
        ),
        returnValue: _i5.Future<_i3.GoogleAccount>.value(_FakeGoogleAccount_1(
          this,
          Invocation.method(
            #login,
            [],
          ),
        )),
      ) as _i5.Future<_i3.GoogleAccount>);
}

/// A class which mocks [TripAppAuthInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockTripAppAuthInterface extends _i1.Mock
    implements _i9.TripAppAuthInterface {
  MockTripAppAuthInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<String> loginWithIdToken({
    required String? idToken,
    required String? nonce,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #loginWithIdToken,
          [],
          {
            #idToken: idToken,
            #nonce: nonce,
          },
        ),
        returnValue: _i5.Future<String>.value(''),
      ) as _i5.Future<String>);
  @override
  _i5.Future<void> createUserWithFirebaseIdToken({required String? name}) =>
      (super.noSuchMethod(
        Invocation.method(
          #createUserWithFirebaseIdToken,
          [],
          {#name: name},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
