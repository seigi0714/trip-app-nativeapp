// Mocks generated by Mockito 5.3.2 from annotations
// in trip_app_nativeapp/test/feature/auth/controller/auth_controller_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:mockito/mockito.dart' as _i1;
import 'package:trip_app_nativeapp/features/auth/domain/interactor/auth_interactor.dart'
    as _i6;
import 'package:trip_app_nativeapp/features/auth/domain/repositories/firebase_auth_interface.dart'
    as _i4;
import 'package:trip_app_nativeapp/features/auth/domain/repositories/google_login_interface.dart'
    as _i5;
import 'package:trip_app_nativeapp/features/auth/domain/repositories/line_login_interface.dart'
    as _i2;
import 'package:trip_app_nativeapp/features/auth/domain/repositories/trip_app_auth_interface.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeLineLoginInterface_0 extends _i1.SmartFake
    implements _i2.LineLoginInterface {
  _FakeLineLoginInterface_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTripAppAuthInterface_1 extends _i1.SmartFake
    implements _i3.TripAppAuthInterface {
  _FakeTripAppAuthInterface_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFirebaseAuthInterface_2 extends _i1.SmartFake
    implements _i4.FirebaseAuthInterface {
  _FakeFirebaseAuthInterface_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGoogleLoginInterface_3 extends _i1.SmartFake
    implements _i5.GoogleLoginInterface {
  _FakeGoogleLoginInterface_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthInteractor].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthInteractor extends _i1.Mock implements _i6.AuthInteractor {
  MockAuthInteractor() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.LineLoginInterface get lineLoginInterface => (super.noSuchMethod(
        Invocation.getter(#lineLoginInterface),
        returnValue: _FakeLineLoginInterface_0(
          this,
          Invocation.getter(#lineLoginInterface),
        ),
      ) as _i2.LineLoginInterface);
  @override
  _i3.TripAppAuthInterface get tripAppAuthInterface => (super.noSuchMethod(
        Invocation.getter(#tripAppAuthInterface),
        returnValue: _FakeTripAppAuthInterface_1(
          this,
          Invocation.getter(#tripAppAuthInterface),
        ),
      ) as _i3.TripAppAuthInterface);
  @override
  _i4.FirebaseAuthInterface get firebaseAuthInterface => (super.noSuchMethod(
        Invocation.getter(#firebaseAuthInterface),
        returnValue: _FakeFirebaseAuthInterface_2(
          this,
          Invocation.getter(#firebaseAuthInterface),
        ),
      ) as _i4.FirebaseAuthInterface);
  @override
  _i5.GoogleLoginInterface get googleLoginInterface => (super.noSuchMethod(
        Invocation.getter(#googleLoginInterface),
        returnValue: _FakeGoogleLoginInterface_3(
          this,
          Invocation.getter(#googleLoginInterface),
        ),
      ) as _i5.GoogleLoginInterface);
  @override
  _i7.Future<void> loginWithLINE() => (super.noSuchMethod(
        Invocation.method(
          #loginWithLINE,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  _i7.Future<void> loginWithGoogle() => (super.noSuchMethod(
        Invocation.method(
          #loginWithGoogle,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}
